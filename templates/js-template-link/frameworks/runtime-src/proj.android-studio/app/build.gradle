apply plugin: 'com.android.application'

repositories {
    flatDir {
        dirs 'libs' //this way we can find the .aar file in libs folder
    }
}
android {
    compileSdkVersion 23
    buildToolsVersion "25.0.0"

    defaultConfig {
        applicationId "com.iflytek.musicnb"
        minSdkVersion 15
        targetSdkVersion 22
        versionCode 140
        versionName "1.4.0"
    }
    lintOptions {
        abortOnError false
        disable 'MissingRegistered'
    }
    sourceSets {
        main {
            java.srcDir "src"
            res.srcDir "res"
            jniLibs.srcDir "libs"
            manifest.srcFile "AndroidManifest.xml"
            assets.srcDir "assets"
        }
        tmall {
            res.srcDirs = ['channel/common/res']
            manifest.srcFile 'channel/common/AndroidManifest.xml'
            assets.srcDirs = ['../hotupdate_manifests/tmall']
        }

        unicom {
            manifest.srcFile 'channel/unicom/AndroidManifest.xml'
            res.srcDirs = ['channel/unicom/res']
            assets.srcDirs = ['../hotupdate_manifests/unicom']
        }

        xiaowo {
            manifest.srcFile 'channel/xiaowo/AndroidManifest.xml'
            res.srcDirs = ['channel/common/res']
            assets.srcDirs = ['../hotupdate_manifests/xiaowo']
        }

    }
    productFlavors {
        tmall {

        }
        unicom {

        }
        xiaowo {

        }
    }
    signingConfigs {
        release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
    compile project(':CommonUtil')
    compile project(':unipay')
    compile project(path: ':unipayforjs')
    tmallCompile project(':commonPay')
    unicomCompile project(':unicomPay')
    xiaowoCompile project(':xiaowoPay')
}